name: Build and Deploy VectorSynth

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/docs/**'
  pull_request_target:
    types: [closed]
    branches: [ main ]

env:
  REGISTRY: ghcr.io/terratensor
  REGISTRY_HOST: ghcr.io
  HOST: ${{ secrets.PRODUCTION_HOST }}
  PORT: ${{ secrets.PRODUCTION_PORT || '22' }}
  DEPLOY_DIR: /home/deploy/vectorsynth
  STACK_NAME: vectorsynth
  IMAGE_NAME: vectorsynth

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push VectorSynth image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    # Запускаем деплой если:
    # 1. Прямой пуш в main ИЛИ
    # 2. Pull Request был merged в main
    if: |
      github.ref == 'refs/heads/main' && github.event_name == 'push' ||
      github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRODUCTION_KEY }}
          known_hosts: ${{ secrets.PRODUCTION_KNOWN_HOSTS }}

      - name: Prepare docker-compose.yml
        run: |
          export REGISTRY=${{ env.REGISTRY }}
          export IMAGE_NAME=${{ env.IMAGE_NAME }}
          envsubst < docker-compose.yml > docker-compose-env.yml
          cat docker-compose-env.yml

      - name: Copy files to server
        run: |
          scp -o StrictHostKeyChecking=no -P ${{ env.PORT }} docker-compose-env.yml deploy@${{ env.HOST }}:${{ env.DEPLOY_DIR }}/docker-compose.yml
          rm -f docker-compose-env.yml

      - name: Deploy to Docker Swarm
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ env.PORT }} deploy@${{ env.HOST }} << 'EOF'
            cd $DEPLOY_DIR
            docker stack deploy -c docker-compose.yml $STACK_NAME --with-registry-auth
            sleep 10
            docker service ls --filter "name=${STACK_NAME}_" --format "table {{.Name}}\t{{.Image}}\t{{.Replicas}}"
          EOF